(()=>{"use strict";class t{constructor(t){this.element=t,this.button=t.querySelector("[data-collapse-trigger]"),this.content=t.querySelector("[data-collapse-content]"),this.isExtended=!1,this.init()}init(){this.content.style.height="0",this.content.style.overflow="hidden",this.content.style.transition="height 0.3s ease-out",this.button.addEventListener("click",(()=>this.toggle()))}toggle(){if(this.isExpanded=!this.isExpanded,this.isExpanded){const t=this.content.scrollHeight;this.content.style.height=`${t}px`}else this.content.style.height="0";this.button.setAttribute("aria-expanded",this.isExpanded)}}class e{constructor(t){this.container=t,this.init()}init(){this.bindToDOM(),this.registerEvents()}bindToDOM(){this.container.innerHTML='\n            <div class="feedback-widget">\n                <button class="feedback-button">Обратная связь</button>\n                <form class="feedback-form hidden">\n                    <div class="form-header">\n                        <h3>Напишите нам</h3>\n                        <button type="button" class="close-button">\n                            <svg xmlns="http://www.w3.org/2000/svg" height="24" width="24" viewBox="0 -960 960 960">\n                                <path d="m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z"/>\n                            </svg>\n                        </button>\n                    </div>\n                    <textarea name="message" rows="8"></textarea>\n                    <button type="submit" class="submit-button">Отправить</button>\n                </form>\n            </div>\n        ',this.button=this.container.querySelector(".feedback-button"),this.form=this.container.querySelector(".feedback-form"),this.closeButton=this.container.querySelector(".close-button"),this.textarea=this.container.querySelector("textarea")}registerEvents(){this.button.addEventListener("click",(()=>this.showForm())),this.closeButton.addEventListener("click",(()=>this.hideForm())),this.form.addEventListener("submit",(t=>this.onSubmit(t)))}showForm(){this.button.classList.add("hidden"),this.form.classList.remove("hidden")}clearForm(){this.textarea.value=""}hideForm(){this.form.classList.add("hidden"),this.button.classList.remove("hidden"),this.clearForm()}onSubmit(t){t.preventDefault(),this.hideForm()}}class n{constructor(t){this.container=t,this.init()}init(){this.bindToDOM(),this.registerEvents()}bindToDOM(){this.container.innerHTML='\n            <div class="liker-widget">\n                <button class="like-button">Like</button>\n                <div class="hearts-container"></div>\n            </div>\n        ',this.button=this.container.querySelector(".like-button"),this.heartsContainer=this.container.querySelector(".hearts-container")}registerEvents(){this.button.addEventListener("click",(()=>this.addHeart()))}addHeart(){const t=document.createElement("div");t.className="heart";const e=100*Math.random()-50;t.style.setProperty("--offset",`${e}px`);const n=this.getRandomTrajectory();t.style.setProperty("--trajectory",n),this.heartsContainer.appendChild(t),t.addEventListener("animationend",(()=>{t.remove()}))}getRandomTrajectory(){const t=["var(--trajectory-1)","var(--trajectory-2)","var(--trajectory-3)","var(--trajectory-4)"];return t[Math.floor(Math.random()*t.length)]}}document.addEventListener("DOMContentLoaded",(()=>{[...document.querySelectorAll("[data-collapse]")].forEach((e=>new t(e)));const s=document.querySelector("#feedback-container");new e(s);const i=document.querySelector("#liker-container");new n(i)}))})();
//# sourceMappingURL=main.c697bc87df3a5b3b93cf.js.map