{"version":3,"file":"main.179e92d886429206333d.js","mappings":"mBAAe,MAAMA,EACnBC,WAAAA,CAAYC,GACVC,KAAKC,aAAeF,EACpBC,KAAKD,KAAO,IAAIA,GAChBC,KAAKE,UAAYC,SAASC,cAAc,oBACxCJ,KAAKK,UAAY,EACjBL,KAAKM,QAAU,CAAC,KAAM,QAAS,OAAQ,QACvCN,KAAKO,WAAa,CAAC,MAAO,QAC1BP,KAAKQ,YAAc,CACjBC,MAAOT,KAAKM,QAAQ,GACpBI,MAAOV,KAAKO,WAAW,GAE3B,CAEAI,WAAAA,GACE,MAAMC,EAAQT,SAASU,cAAc,SAarC,IAZAD,EAAME,UAAY,kQAYXd,KAAKE,UAAUa,YACpBf,KAAKE,UAAUc,YAAYhB,KAAKE,UAAUa,YAG5Cf,KAAKE,UAAUe,YAAYL,GAC3BZ,KAAKkB,MAAQN,EAAMR,cAAc,SACjCJ,KAAKmB,YACP,CAEAA,UAAAA,GACE,MAAMD,EAAQlB,KAAKkB,MACnB,KAAOA,EAAMH,YACXG,EAAMF,YAAYE,EAAMH,YAG1Bf,KAAKD,KAAKqB,SAAQC,IAChB,MAAMC,EAAMnB,SAASU,cAAc,MACnCS,EAAIR,UAAY,kBACPO,EAAME,wBACPF,EAAMG,4BACLH,EAAMI,iCACDJ,EAAMK,KAAKC,QAAQ,kBAEjCT,EAAMD,YAAYK,EAAI,GAE1B,CAEAM,IAAAA,GACE,MAAM,MAAEnB,EAAK,MAAEC,GAAUV,KAAKQ,YAExBqB,EAAa,IAAI7B,KAAKD,MAAM6B,MAAK,CAACE,EAAGC,KACzC,IAAIC,EAAOF,EAAErB,GACTwB,EAAOF,EAAEtB,GAOb,MALc,UAAVA,IACFuB,EAAOE,OAAOF,GACdC,EAAOC,OAAOD,IAGF,QAAVvB,EACKsB,EAAOC,EAAO,GAAK,EAErBD,EAAOC,EAAO,GAAK,CAAC,IAI7BjC,KAAKD,KAAO8B,EACZ7B,KAAKmB,aACLnB,KAAKmC,qBACP,CAEAA,mBAAAA,GACkBnC,KAAKE,UAAUkC,iBAAiB,MAExChB,SAAQiB,IACd,MACMC,EADQD,EAAOE,QAAQX,OACL5B,KAAKQ,YAAYC,MACT,QAA3BT,KAAKQ,YAAYE,MAAkB,KAAO,KAC3C,KACJ2B,EAAOG,YAAcH,EAAOG,YAAYC,QAAQ,QAAS,IAAMH,CAAK,GAExE,CAEAI,QAAAA,GACE,MAAMC,EAAcC,KAAKC,MAAM7C,KAAKK,UAAY,GAC1CyC,EAAa9C,KAAKK,UAAY,EAEpCL,KAAKQ,YAAc,CACjBC,MAAOT,KAAKM,QAAQqC,GACpBjC,MAAOV,KAAKO,WAAWuC,IAGzB9C,KAAKK,WAAaL,KAAKK,UAAY,IAA4B,EAAtBL,KAAKM,QAAQyC,QACtD/C,KAAK4B,MAEP,CAEAoB,aAAAA,GACEC,aAAY,IAAMjD,KAAK0C,YAAY,IACrC,ECxGF,MAAMQ,EAAS,CACb,CACE,GAAM,GACN,MAAS,oBACT,KAAQ,IACR,KAAQ,MAEV,CACE,GAAM,GACN,MAAS,gBACT,KAAQ,IACR,KAAQ,MAEV,CACE,GAAM,GACN,MAAS,kBACT,KAAQ,EACR,KAAQ,MAEV,CACE,GAAM,KACN,MAAS,gBACT,KAAQ,EACR,KAAQ,MAEV,CACE,GAAM,IACN,MAAS,qBACT,KAAQ,IACR,KAAQ,OAIZ/C,SAASgD,iBAAiB,oBAAoB,KAC5C,IACE,MAAMvC,EAAQ,IAAIf,EAAWqD,GAC7BtC,EAAMD,cACNC,EAAMoC,eACR,CAAE,MAAOI,GACPC,QAAQC,MAAM,8BAA+BF,EAC/C,I","sources":["webpack://sortable-movies/./src/js/table.js","webpack://sortable-movies/./src/index.js"],"sourcesContent":["export default class MovieTable {\r\n  constructor(data) {\r\n    this.originalData = data;\r\n    this.data = [...data];\r\n    this.container = document.querySelector('.table-container');\r\n    this.sortIndex = 0;\r\n    this.columns = ['id', 'title', 'year', 'imdb'];\r\n    this.sortOrders = ['asc', 'desc'];\r\n    this.currentSort = {\r\n      field: this.columns[0],\r\n      order: this.sortOrders[0],\r\n    };\r\n  }\r\n\r\n  createTable() {\r\n    const table = document.createElement('table');\r\n    table.innerHTML = `\r\n      <thead>\r\n        <tr>\r\n          <td data-sort=\"id\">id</td>\r\n          <td data-sort=\"title\">title</td>\r\n          <td data-sort=\"year\">year</td>\r\n          <td data-sort=\"imdb\">imdb</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody></tbody>\r\n    `;\r\n\r\n    while (this.container.firstChild) {\r\n      this.container.removeChild(this.container.firstChild);\r\n    }\r\n\r\n    this.container.appendChild(table);\r\n    this.tbody = table.querySelector('tbody');\r\n    this.renderRows();\r\n  }\r\n\r\n  renderRows() {\r\n    const tbody = this.tbody;\r\n    while (tbody.firstChild) {\r\n      tbody.removeChild(tbody.firstChild);\r\n    }\r\n\r\n    this.data.forEach(movie => {\r\n      const row = document.createElement('tr');\r\n      row.innerHTML = `\r\n        <td>#${movie.id}</td>\r\n        <td>${movie.title}</td>\r\n        <td>(${movie.year})</td>\r\n        <td>imdb: ${movie.imdb.toFixed(2)}</td>\r\n      `;\r\n      tbody.appendChild(row);\r\n    });\r\n  }\r\n\r\n  sort() {\r\n    const { field, order } = this.currentSort;\r\n\r\n    const sortedData = [...this.data].sort((a, b) => {\r\n      let aVal = a[field];\r\n      let bVal = b[field];\r\n\r\n      if (field !== 'title') {\r\n        aVal = Number(aVal);\r\n        bVal = Number(bVal);\r\n      }\r\n\r\n      if (order === 'asc') {\r\n        return aVal > bVal ? 1 : -1;\r\n      }\r\n      return aVal < bVal ? 1 : -1;\r\n    });\r\n\r\n\r\n    this.data = sortedData;\r\n    this.renderRows();\r\n    this.updateSortIndicator();\r\n  }\r\n\r\n  updateSortIndicator() {\r\n    const headers = this.container.querySelectorAll('th');\r\n\r\n    headers.forEach(header => {\r\n      const field = header.dataset.sort;\r\n      const arrow = field === this.currentSort.field\r\n        ? (this.currentSort.order === 'asc' ? ' ↑' : ' ↓')\r\n        : ' ↕';\r\n      header.textContent = header.textContent.replace(/[↕↑↓]/, '') + arrow;\r\n    });\r\n  }\r\n\r\n  nextSort() {\r\n    const columnIndex = Math.floor(this.sortIndex / 2);\r\n    const orderIndex = this.sortIndex % 2;\r\n\r\n    this.currentSort = {\r\n      field: this.columns[columnIndex],\r\n      order: this.sortOrders[orderIndex],\r\n    };\r\n\r\n    this.sortIndex = (this.sortIndex + 1) % (this.columns.length * 2);\r\n    this.sort();\r\n    // this.updateSortIndicator();\r\n  }\r\n\r\n  startAutoSort() {\r\n    setInterval(() => this.nextSort(), 2000);\r\n  }\r\n}","import './css/style.css';\r\nimport MovieTable from './js/table.js';\r\n\r\nconst movies = [\r\n  {\r\n    'id': 26,\r\n    'title': 'Побег из Шоушенка',\r\n    'imdb': 9.30,\r\n    'year': 1994,\r\n  },\r\n  {\r\n    'id': 25,\r\n    'title': 'Крёстный отец',\r\n    'imdb': 9.20,\r\n    'year': 1972,\r\n  },\r\n  {\r\n    'id': 27,\r\n    'title': 'Крёстный отец 2',\r\n    'imdb': 9.00,\r\n    'year': 1974,\r\n  },\r\n  {\r\n    'id': 1047,\r\n    'title': 'Тёмный рыцарь',\r\n    'imdb': 9.00,\r\n    'year': 2008,\r\n  },\r\n  {\r\n    'id': 223,\r\n    'title': 'Криминальное чтиво',\r\n    'imdb': 8.90,\r\n    'year': 1994,\r\n  },\r\n];\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  try {\r\n    const table = new MovieTable(movies);\r\n    table.createTable();\r\n    table.startAutoSort();\r\n  } catch (e) {\r\n    console.error('Failed to initialize table:', e);\r\n  }\r\n});"],"names":["MovieTable","constructor","data","this","originalData","container","document","querySelector","sortIndex","columns","sortOrders","currentSort","field","order","createTable","table","createElement","innerHTML","firstChild","removeChild","appendChild","tbody","renderRows","forEach","movie","row","id","title","year","imdb","toFixed","sort","sortedData","a","b","aVal","bVal","Number","updateSortIndicator","querySelectorAll","header","arrow","dataset","textContent","replace","nextSort","columnIndex","Math","floor","orderIndex","length","startAutoSort","setInterval","movies","addEventListener","e","console","error"],"sourceRoot":""}