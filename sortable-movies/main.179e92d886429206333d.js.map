{"version":3,"file":"main.179e92d886429206333d.js","mappings":"mBAAe,MAAMA,EACnBC,WAAAA,CAAYC,GACVC,KAAKC,aAAeF,EACpBC,KAAKD,KAAO,IAAIA,GAChBC,KAAKE,UAAYC,SAASC,cAAc,oBACxCJ,KAAKK,UAAY,EACjBL,KAAKM,QAAU,CAAC,KAAM,QAAS,OAAQ,QACvCN,KAAKO,WAAa,CAAC,MAAO,QAC1BP,KAAKQ,YAAc,CACjBC,MAAOT,KAAKM,QAAQ,GACpBI,MAAOV,KAAKO,WAAW,GAE3B,CAEAI,WAAAA,GACE,MAAMC,EAAQT,SAASU,cAAc,SAarC,IAZAD,EAAME,UAAY,kQAYXd,KAAKE,UAAUa,YACpBf,KAAKE,UAAUc,YAAYhB,KAAKE,UAAUa,YAG5Cf,KAAKE,UAAUe,YAAYL,GAC3BZ,KAAKkB,MAAQN,EAAMR,cAAc,SACjCJ,KAAKmB,YACP,CAEAA,UAAAA,GACE,MAAMD,EAAQlB,KAAKkB,MACnB,KAAOA,EAAMH,YACXG,EAAMF,YAAYE,EAAMH,YAG1Bf,KAAKD,KAAKqB,SAAQC,IAChB,MAAMC,EAAMnB,SAASU,cAAc,MACnCS,EAAIR,UAAY,kBACPO,EAAME,wBACPF,EAAMG,4BACLH,EAAMI,iCACDJ,EAAMK,KAAKC,QAAQ,kBAEjCT,EAAMD,YAAYK,EAAI,GAE1B,CAEAM,IAAAA,GACE,MAAM,MAAEnB,EAAK,MAAEC,GAAUV,KAAKQ,YAExBqB,EAAa,IAAI7B,KAAKD,MAAM6B,MAAK,CAACE,EAAGC,KACzC,IAAIC,EAAOF,EAAErB,GACTwB,EAAOF,EAAEtB,GAOb,MALc,UAAVA,IACFuB,EAAOE,OAAOF,GACdC,EAAOC,OAAOD,IAGF,QAAVvB,EACKsB,EAAOC,EAAO,GAAK,EAErBD,EAAOC,EAAO,GAAK,CAAC,IAI7BjC,KAAKD,KAAO8B,EACZ7B,KAAKmB,aACLnB,KAAKmC,qBACP,CAEAA,mBAAAA,GACkBnC,KAAKE,UAAUkC,iBAAiB,MAExChB,SAAQiB,IACd,MACMC,EADQD,EAAOE,QAAQX,OACL5B,KAAKQ,YAAYC,MACT,QAA3BT,KAAKQ,YAAYE,MAAkB,KAAO,KAC3C,KACJ2B,EAAOG,YAAcH,EAAOG,YAAYC,QAAQ,QAAS,IAAMH,CAAK,GAExE,CAEAI,QAAAA,GACE,MAAMC,EAAcC,KAAKC,MAAM7C,KAAKK,UAAY,GAC1CyC,EAAa9C,KAAKK,UAAY,EAEpCL,KAAKQ,YAAc,CACjBC,MAAOT,KAAKM,QAAQqC,GACpBjC,MAAOV,KAAKO,WAAWuC,IAGzB9C,KAAKK,WAAaL,KAAKK,UAAY,IAA4B,EAAtBL,KAAKM,QAAQyC,QACtD/C,KAAK4B,MAEP,CAEAoB,aAAAA,GACEC,aAAY,IAAMjD,KAAK0C,YAAY,IACrC,ECxGF,MAAMQ,EAAS,CACb,CACE,GAAM,GACN,MAAS,oBACT,KAAQ,IACR,KAAQ,MAEV,CACE,GAAM,GACN,MAAS,gBACT,KAAQ,IACR,KAAQ,MAEV,CACE,GAAM,GACN,MAAS,kBACT,KAAQ,EACR,KAAQ,MAEV,CACE,GAAM,KACN,MAAS,gBACT,KAAQ,EACR,KAAQ,MAEV,CACE,GAAM,IACN,MAAS,qBACT,KAAQ,IACR,KAAQ,OAIZ/C,SAASgD,iBAAiB,oBAAoB,KAC5C,IACE,MAAMvC,EAAQ,IAAIf,EAAWqD,GAC7BtC,EAAMD,cACNC,EAAMoC,eACR,CAAE,MAAOI,GACPC,QAAQC,MAAM,8BAA+BF,EAC/C,I","sources":["webpack://sortable-movies/./src/js/table.js","webpack://sortable-movies/./src/index.js"],"sourcesContent":["export default class MovieTable {\n  constructor(data) {\n    this.originalData = data;\n    this.data = [...data];\n    this.container = document.querySelector('.table-container');\n    this.sortIndex = 0;\n    this.columns = ['id', 'title', 'year', 'imdb'];\n    this.sortOrders = ['asc', 'desc'];\n    this.currentSort = {\n      field: this.columns[0],\n      order: this.sortOrders[0],\n    };\n  }\n\n  createTable() {\n    const table = document.createElement('table');\n    table.innerHTML = `\n      <thead>\n        <tr>\n          <td data-sort=\"id\">id</td>\n          <td data-sort=\"title\">title</td>\n          <td data-sort=\"year\">year</td>\n          <td data-sort=\"imdb\">imdb</td>\n        </tr>\n      </thead>\n      <tbody></tbody>\n    `;\n\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild);\n    }\n\n    this.container.appendChild(table);\n    this.tbody = table.querySelector('tbody');\n    this.renderRows();\n  }\n\n  renderRows() {\n    const tbody = this.tbody;\n    while (tbody.firstChild) {\n      tbody.removeChild(tbody.firstChild);\n    }\n\n    this.data.forEach(movie => {\n      const row = document.createElement('tr');\n      row.innerHTML = `\n        <td>#${movie.id}</td>\n        <td>${movie.title}</td>\n        <td>(${movie.year})</td>\n        <td>imdb: ${movie.imdb.toFixed(2)}</td>\n      `;\n      tbody.appendChild(row);\n    });\n  }\n\n  sort() {\n    const { field, order } = this.currentSort;\n\n    const sortedData = [...this.data].sort((a, b) => {\n      let aVal = a[field];\n      let bVal = b[field];\n\n      if (field !== 'title') {\n        aVal = Number(aVal);\n        bVal = Number(bVal);\n      }\n\n      if (order === 'asc') {\n        return aVal > bVal ? 1 : -1;\n      }\n      return aVal < bVal ? 1 : -1;\n    });\n\n\n    this.data = sortedData;\n    this.renderRows();\n    this.updateSortIndicator();\n  }\n\n  updateSortIndicator() {\n    const headers = this.container.querySelectorAll('th');\n\n    headers.forEach(header => {\n      const field = header.dataset.sort;\n      const arrow = field === this.currentSort.field\n        ? (this.currentSort.order === 'asc' ? ' ↑' : ' ↓')\n        : ' ↕';\n      header.textContent = header.textContent.replace(/[↕↑↓]/, '') + arrow;\n    });\n  }\n\n  nextSort() {\n    const columnIndex = Math.floor(this.sortIndex / 2);\n    const orderIndex = this.sortIndex % 2;\n\n    this.currentSort = {\n      field: this.columns[columnIndex],\n      order: this.sortOrders[orderIndex],\n    };\n\n    this.sortIndex = (this.sortIndex + 1) % (this.columns.length * 2);\n    this.sort();\n    // this.updateSortIndicator();\n  }\n\n  startAutoSort() {\n    setInterval(() => this.nextSort(), 2000);\n  }\n}","import './css/style.css';\nimport MovieTable from './js/table.js';\n\nconst movies = [\n  {\n    'id': 26,\n    'title': 'Побег из Шоушенка',\n    'imdb': 9.30,\n    'year': 1994,\n  },\n  {\n    'id': 25,\n    'title': 'Крёстный отец',\n    'imdb': 9.20,\n    'year': 1972,\n  },\n  {\n    'id': 27,\n    'title': 'Крёстный отец 2',\n    'imdb': 9.00,\n    'year': 1974,\n  },\n  {\n    'id': 1047,\n    'title': 'Тёмный рыцарь',\n    'imdb': 9.00,\n    'year': 2008,\n  },\n  {\n    'id': 223,\n    'title': 'Криминальное чтиво',\n    'imdb': 8.90,\n    'year': 1994,\n  },\n];\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  try {\n    const table = new MovieTable(movies);\n    table.createTable();\n    table.startAutoSort();\n  } catch (e) {\n    console.error('Failed to initialize table:', e);\n  }\n});"],"names":["MovieTable","constructor","data","this","originalData","container","document","querySelector","sortIndex","columns","sortOrders","currentSort","field","order","createTable","table","createElement","innerHTML","firstChild","removeChild","appendChild","tbody","renderRows","forEach","movie","row","id","title","year","imdb","toFixed","sort","sortedData","a","b","aVal","bVal","Number","updateSortIndicator","querySelectorAll","header","arrow","dataset","textContent","replace","nextSort","columnIndex","Math","floor","orderIndex","length","startAutoSort","setInterval","movies","addEventListener","e","console","error"],"sourceRoot":""}