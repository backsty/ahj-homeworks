{"version":3,"file":"main.63ba9e33ba07fadb69a8.js","mappings":"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","sources":["webpack://dom/webpack/bootstrap","webpack://dom/webpack/runtime/hasOwnProperty shorthand","webpack://dom/webpack/runtime/publicPath","webpack://dom/webpack/runtime/jsonp chunk loading","webpack://dom/./src/js/game.js","webpack://dom/./src/index.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/events/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","export default class Game {\r\n  constructor() {\r\n    this.boardSize = 4;\r\n    this.character = null;\r\n    this.currentPosition = null;\r\n    this.moveInterval = null;\r\n    this.isClicked = false;\r\n    this.startScreen = document.querySelector('#start-screen');\r\n    this.gameContainer = document.querySelector('#game-container');\r\n    this.startButton = document.querySelector('#start-button');\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  setupEventListeners() {\r\n    if (!this.startButton) {\r\n      console.error('Start button not found');\r\n      return;\r\n    }\r\n\r\n    this.startButton.addEventListener('click', () => {\r\n      if (this.startScreen && this.gameContainer) {\r\n        this.init();\r\n        this.startScreen.classList.add('hidden');\r\n        this.gameContainer.classList.remove('hidden');\r\n        this.gameContainer.classList.add('active');\r\n      }\r\n    });\r\n  }\r\n\r\n  createBoard() {\r\n    if (!this.gameContainer) {\r\n      console.error('Game container not found');\r\n      return;\r\n    }\r\n\r\n    this.gameContainer.innerHTML = '';\r\n\r\n    const board = document.createElement('div');\r\n    board.classList.add('game-board');\r\n\r\n    for (let i = 0; i < this.boardSize * this.boardSize; i++) {\r\n      const cell = document.createElement('div');\r\n      cell.classList.add('cell');\r\n      cell.dataset.index = i;\r\n      cell.addEventListener('click', (e) => this.handleCellClick(e));\r\n      board.appendChild(cell);\r\n    }\r\n\r\n    this.gameContainer.appendChild(board);\r\n  }\r\n\r\n  init() {\r\n    this.createBoard();\r\n    this.createCharacter();\r\n    this.startGame();\r\n  }\r\n\r\n  createCharacter() {\r\n    this.character = document.createElement('img');\r\n    this.character.src = new URL('../img/goblin.png', import.meta.url);\r\n    this.character.classList.add('character');\r\n    this.moveToRandomCell();\r\n  }\r\n\r\n  handleCellClick(event) {\r\n    const cell = event.target.closest('.cell');\r\n    if (!cell) return;\r\n\r\n    if (cell.contains(this.character)) {\r\n      this.isClicked = true;\r\n      cell.classList.add('hit');\r\n    } else {\r\n      cell.classList.add('miss');\r\n      setTimeout(() => {\r\n        cell.classList.remove('miss');\r\n      }, 550);\r\n    }\r\n  }\r\n\r\n  moveToRandomCell() {\r\n    const cells = Array.from(document.querySelectorAll('.cell'));\r\n    const emptyCells = cells.filter(cell => !cell.hasChildNodes());\r\n\r\n    if (emptyCells.length === 0) return;\r\n\r\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\r\n    const newCell = emptyCells[randomIndex];\r\n    const oldPosition = this.currentPosition;\r\n\r\n    if (oldPosition !== newCell) {\r\n      if (oldPosition) {\r\n        oldPosition.classList.remove('hit', 'miss');\r\n      }\r\n\r\n      if (oldPosition && !this.isClicked) {\r\n        oldPosition.classList.add('miss');\r\n        oldPosition.classList.remove('miss');\r\n      }\r\n\r\n      newCell.appendChild(this.character);\r\n      this.currentPosition = newCell;\r\n      this.isClicked = false;\r\n    }\r\n  }\r\n\r\n  startGame() {\r\n    this.moveInterval = setInterval(() => {\r\n      this.moveToRandomCell();\r\n    }, 1000);\r\n  }\r\n\r\n  stopGame() {\r\n    if (this.moveInterval) {\r\n      clearInterval(this.moveInterval);\r\n    }\r\n  }\r\n}","import './css/style.css';\r\nimport Game from './js/game.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  try {\r\n    new Game();\r\n  } catch (e) {\r\n    console.error('Failed to initialize game:', e);\r\n  }\r\n});"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","o","obj","prop","Object","prototype","hasOwnProperty","call","p","b","document","baseURI","self","location","href","Game","constructor","this","boardSize","character","currentPosition","moveInterval","isClicked","startScreen","querySelector","gameContainer","startButton","setupEventListeners","addEventListener","init","classList","add","remove","console","error","createBoard","innerHTML","board","createElement","i","cell","dataset","index","e","handleCellClick","appendChild","createCharacter","startGame","src","URL","moveToRandomCell","event","target","closest","contains","setTimeout","emptyCells","Array","from","querySelectorAll","filter","hasChildNodes","length","newCell","Math","floor","random","oldPosition","setInterval","stopGame","clearInterval"],"sourceRoot":""}