{"version":3,"file":"main.d74e0c4beed47e10120f.js","mappings":"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","sources":["webpack://credit-card-validator/webpack/bootstrap","webpack://credit-card-validator/webpack/runtime/publicPath","webpack://credit-card-validator/./src/js/utils/constants.js","webpack://credit-card-validator/./src/js/services/cardTypeDetector.js","webpack://credit-card-validator/./src/js/services/cardValidation.js","webpack://credit-card-validator/./src/js/components/CardValidator.js","webpack://credit-card-validator/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.p = \"/testing/\";","import visaImg from '../../img/visa.png';\r\nimport mastercardImg from '../../img/mastercard.png';\r\nimport mirImg from '../../img/mir.png';\r\n\r\nexport const CARD_PATTERNS = {\r\n  VISA: {\r\n    pattern: /^4/,\r\n    lengths: [13, 16],\r\n    name: 'visa',\r\n  },\r\n  MASTERCARD: {\r\n    pattern: /^5[1-5]/,\r\n    lengths: [16],\r\n    name: 'mastercard',\r\n  },\r\n  MIR: {\r\n    pattern: /^220[0-4]/,\r\n    lengths: [16],\r\n    name: 'mir',\r\n  },\r\n};\r\n\r\nexport const CSS_CLASSES = {\r\n  CARD_VALIDATOR: 'card-validator',\r\n  CARD_IMAGES: 'card-images',\r\n  CARD_IMAGE: 'card-image',\r\n  CARD_INPUT: 'card-input',\r\n  VALIDATE_BUTTON: 'validate-btn',\r\n  ACTIVE: 'active',\r\n  INVALID: 'invalid',\r\n  VALID: 'valid',\r\n};\r\n\r\nexport const CARD_IMAGES = {\r\n  visa: visaImg,\r\n  mastercard: mastercardImg,\r\n  mir: mirImg,\r\n};\r\n\r\nexport const MESSAGES = {\r\n  VALID_CARD: 'Номер карты валиден',\r\n  INVALID_CARD: 'Неверный номер карты',\r\n  UNKNOWN_TYPE: 'Неизвестный тип карты',\r\n};\r\n\r\nexport const INPUT_RESTRICTIONS = {\r\n  MAX_LENGTH: 19,\r\n  CHUNK_SIZE: 4,\r\n};","import { CARD_PATTERNS } from '../utils/constants.js';\r\n\r\nexport default class CardTypeDetector {\r\n  detectCardType(number) {\r\n    const cleanNumber = number.replace(/\\D/g, '');\r\n    \r\n    for (const [type, config] of Object.entries(CARD_PATTERNS)) {\r\n      if (config.pattern.test(cleanNumber) && \r\n          config.lengths.includes(cleanNumber.length)) {\r\n        return config.name;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}","export default class CardValidation {\r\n  validateCard(number) {\r\n    if (!number || number.length < 13) {\r\n      return false;\r\n    }\r\n    return this.luhnAlgorithm(number);\r\n  }\r\n\r\n  luhnAlgorithm(number) {\r\n    const digits = number.replace(/\\D/g, '');\r\n    let sum = 0;\r\n    let isEven = false;\r\n\r\n    for (let i = digits.length - 1; i >= 0; i--) {\r\n      let digit = parseInt(digits[i], 10);\r\n\r\n      if (isEven) {\r\n        digit *= 2;\r\n        if (digit > 9) {\r\n          digit -= 9;\r\n        }\r\n      }\r\n\r\n      sum += digit;\r\n      isEven = !isEven;\r\n    }\r\n\r\n    return sum % 10 === 0;\r\n  }\r\n}","import { CSS_CLASSES, CARD_IMAGES, MESSAGES, INPUT_RESTRICTIONS } from '../utils/constants.js';\r\nimport CardTypeDetector from '../services/cardTypeDetector.js';\r\nimport Validator from '../services/cardValidation.js';\r\n\r\nexport default class CardValidator {\r\n  constructor(container) {\r\n    if (!container) {\r\n      throw new Error('Container element is required');\r\n    }\r\n    this.container = container;\r\n    this.input = null;\r\n    this.cardimage = {};\r\n    this.validator = new Validator();\r\n    this.typeDetector = new CardTypeDetector();\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.renderWidget();\r\n    this.setupListeners();\r\n  }\r\n\r\n  renderWidget() {\r\n    this.container.innerHTML = `\r\n      <div class=\"${CSS_CLASSES.CARD_VALIDATOR}\">\r\n        <div class=\"${CSS_CLASSES.CARD_IMAGES}\">\r\n          ${Object.entries(CARD_IMAGES).map(([type, src]) => `\r\n            <img src=\"${src}\" \r\n                 data-type=\"${type}\" \r\n                 class=\"${CSS_CLASSES.CARD_IMAGE}\"\r\n                 alt=\"${type}\"\r\n            >\r\n          `).join('')}\r\n        </div>\r\n        <input type=\"text\" \r\n               class=\"${CSS_CLASSES.CARD_INPUT}\"\r\n               maxlength=\"${INPUT_RESTRICTIONS.MAX_LENGTH}\"\r\n               placeholder=\"Enter card number\">\r\n        <button class=\"${CSS_CLASSES.VALIDATE_BUTTON}\">Validate</button>\r\n      </div>\r\n    `;\r\n\r\n    // this.container.innerHTML = markup;\r\n    this.input = this.container.querySelector(`.${CSS_CLASSES.CARD_INPUT}`);\r\n    this.cardImages  = Array.from(this.container.querySelectorAll(`.${CSS_CLASSES.CARD_IMAGE}`));\r\n  }\r\n\r\n  setupListeners() {\r\n    this.input.addEventListener('input', (e) => this.handleInput(e));\r\n    this.container.querySelector(`.${CSS_CLASSES.VALIDATE_BUTTON}`)\r\n      .addEventListener('click', () => this.validateCard());\r\n  }\r\n\r\n  handleInput(e) {\r\n    let value = e.target.value.replace(/\\D/g, '');\r\n\r\n    // Форматирование ввода по чанкам\r\n    const chunks = [];\r\n    for (let i = 0; i < value.length; i += INPUT_RESTRICTIONS.CHUNK_SIZE) {\r\n      chunks.push(value.slice(i, i + INPUT_RESTRICTIONS.CHUNK_SIZE));\r\n    }\r\n    this.input.value = chunks.join(' ');\r\n\r\n    const cardType = this.typeDetector.detectCardType(value);\r\n    this.highlightCardType(cardType);\r\n  }\r\n\r\n  \r\n  highlightCardType(type) {\r\n    this.cardImages.forEach(img => {\r\n      const isActive = img.dataset.type === type;\r\n      img.classList.toggle(CSS_CLASSES.ACTIVE, isActive);\r\n    });\r\n  }\r\n  \r\n  validateCard() {\r\n    const number = this.input.value.replace(/\\D/g, '');\r\n\r\n    if (!number) {\r\n      this.showValidationResult(false);\r\n      return;\r\n    }\r\n\r\n    if (number.length < 13) {\r\n      this.showValidationResult(false);\r\n      return;\r\n    }\r\n\r\n    const isValid = this.validator.validateCard(number);\r\n    this.showValidationResult(isValid);\r\n  }\r\n\r\n  showValidationResult(isValid) {\r\n    const message = isValid ? MESSAGES.VALID_CARD : MESSAGES.INVALID_CARD;\r\n    this.input.classList.toggle(CSS_CLASSES.VALID, isValid);\r\n    this.input.classList.toggle(CSS_CLASSES.INVALID, !isValid);\r\n    alert(message);\r\n  }\r\n}","import './css/style.css';\r\nimport CardValidator from './js/components/CardValidator.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const container = document.getElementById('root');\r\n  new CardValidator(container);\r\n});"],"names":["__webpack_require__","CARD_PATTERNS","VISA","pattern","lengths","name","MASTERCARD","MIR","CSS_CLASSES","CARD_IMAGES","visa","visaImg","mastercard","mastercardImg","mir","mirImg","MESSAGES","INPUT_RESTRICTIONS","CardTypeDetector","detectCardType","number","cleanNumber","replace","type","config","Object","entries","test","includes","length","CardValidation","validateCard","this","luhnAlgorithm","digits","sum","isEven","i","digit","parseInt","CardValidator","constructor","container","Error","input","cardimage","validator","Validator","typeDetector","init","renderWidget","setupListeners","innerHTML","map","src","join","querySelector","cardImages","Array","from","querySelectorAll","addEventListener","e","handleInput","value","target","chunks","push","slice","cardType","highlightCardType","forEach","img","isActive","dataset","classList","toggle","showValidationResult","isValid","message","alert","document","getElementById"],"sourceRoot":""}