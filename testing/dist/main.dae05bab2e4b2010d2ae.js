(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");if(i.length)for(var r=i.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=i[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=t.p+"img/visa.png",n=t.p+"img/mastercard.png",i=t.p+"img/mir.png",r={VISA:{pattern:/^4/,lengths:[13,16],name:"visa"},MASTERCARD:{pattern:/^5[1-5]/,lengths:[16],name:"mastercard"},MIR:{pattern:/^220[0-4]/,lengths:[16],name:"mir"}},a="card-validator",s="card-images",l="card-image",c="card-input",o="validate-btn",h="active",d="invalid",p="valid",u={visa:e,mastercard:n,mir:i},g="Номер карты валиден",m="Неверный номер карты",v=19,f=4;class y{detectCardType(t){const e=t.replace(/\D/g,"");for(const[t,n]of Object.entries(r))if(n.pattern.test(e)&&n.lengths.includes(e.length))return n.name;return null}}class w{validateCard(t){return!(!t||t.length<13)&&this.luhnAlgorithm(t)}luhnAlgorithm(t){const e=t.replace(/\D/g,"");let n=0,i=!1;for(let t=e.length-1;t>=0;t--){let r=parseInt(e[t],10);i&&(r*=2,r>9&&(r-=9)),n+=r,i=!i}return n%10==0}}class ${constructor(t){if(!t)throw new Error("Container element is required");this.container=t,this.input=null,this.cardimage={},this.validator=new w,this.typeDetector=new y,this.init()}init(){this.renderWidget(),this.setupListeners()}renderWidget(){this.container.innerHTML=`\n      <div class="${a}">\n        <div class="${s}">\n          ${Object.entries(u).map((([t,e])=>`\n            <img src="${e}" \n                 data-type="${t}" \n                 class="${l}"\n                 alt="${t}"\n            >\n          `)).join("")}\n        </div>\n        <input type="text" \n               class="${c}"\n               maxlength="${v}"\n               placeholder="Enter card number">\n        <button class="${o}">Validate</button>\n      </div>\n    `,this.input=this.container.querySelector(`.${c}`),this.cardImages=Array.from(this.container.querySelectorAll(`.${l}`))}setupListeners(){this.input.addEventListener("input",(t=>this.handleInput(t))),this.container.querySelector(`.${o}`).addEventListener("click",(()=>this.validateCard()))}handleInput(t){let e=t.target.value.replace(/\D/g,"");const n=[];for(let t=0;t<e.length;t+=f)n.push(e.slice(t,t+f));this.input.value=n.join(" ");const i=this.typeDetector.detectCardType(e);this.highlightCardType(i)}highlightCardType(t){this.cardImages.forEach((e=>{const n=e.dataset.type===t;e.classList.toggle(h,n)}))}validateCard(){const t=this.input.value.replace(/\D/g,"");if(!t)return void this.showValidationResult(!1);if(t.length<13)return void this.showValidationResult(!1);const e=this.validator.validateCard(t);this.showValidationResult(e)}showValidationResult(t){const e=t?g:m;this.input.classList.toggle(p,t),this.input.classList.toggle(d,!t),alert(e)}}document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("root");new $(t)}))})();
//# sourceMappingURL=main.dae05bab2e4b2010d2ae.js.map