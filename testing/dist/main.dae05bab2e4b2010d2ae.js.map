{"version":3,"file":"main.dae05bab2e4b2010d2ae.js","mappings":"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","sources":["webpack://credit-card-validator/webpack/bootstrap","webpack://credit-card-validator/webpack/runtime/global","webpack://credit-card-validator/webpack/runtime/publicPath","webpack://credit-card-validator/./src/js/utils/constants.js","webpack://credit-card-validator/./src/js/services/cardTypeDetector.js","webpack://credit-card-validator/./src/js/services/cardValidation.js","webpack://credit-card-validator/./src/js/components/CardValidator.js","webpack://credit-card-validator/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import visaImg from '../../img/visa.png';\r\nimport mastercardImg from '../../img/mastercard.png';\r\nimport mirImg from '../../img/mir.png';\r\n\r\nexport const CARD_PATTERNS = {\r\n  VISA: {\r\n    pattern: /^4/,\r\n    lengths: [13, 16],\r\n    name: 'visa',\r\n  },\r\n  MASTERCARD: {\r\n    pattern: /^5[1-5]/,\r\n    lengths: [16],\r\n    name: 'mastercard',\r\n  },\r\n  MIR: {\r\n    pattern: /^220[0-4]/,\r\n    lengths: [16],\r\n    name: 'mir',\r\n  },\r\n};\r\n\r\nexport const CSS_CLASSES = {\r\n  CARD_VALIDATOR: 'card-validator',\r\n  CARD_IMAGES: 'card-images',\r\n  CARD_IMAGE: 'card-image',\r\n  CARD_INPUT: 'card-input',\r\n  VALIDATE_BUTTON: 'validate-btn',\r\n  ACTIVE: 'active',\r\n  INVALID: 'invalid',\r\n  VALID: 'valid',\r\n};\r\n\r\nexport const CARD_IMAGES = {\r\n  visa: visaImg,\r\n  mastercard: mastercardImg,\r\n  mir: mirImg,\r\n};\r\n\r\nexport const MESSAGES = {\r\n  VALID_CARD: 'Номер карты валиден',\r\n  INVALID_CARD: 'Неверный номер карты',\r\n  UNKNOWN_TYPE: 'Неизвестный тип карты',\r\n};\r\n\r\nexport const INPUT_RESTRICTIONS = {\r\n  MAX_LENGTH: 19,\r\n  CHUNK_SIZE: 4,\r\n};","import { CARD_PATTERNS } from '../utils/constants.js';\r\n\r\nexport default class CardTypeDetector {\r\n  detectCardType(number) {\r\n    const cleanNumber = number.replace(/\\D/g, '');\r\n    \r\n    for (const [type, config] of Object.entries(CARD_PATTERNS)) {\r\n      if (config.pattern.test(cleanNumber) && \r\n          config.lengths.includes(cleanNumber.length)) {\r\n        return config.name;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}","export default class CardValidation {\r\n  validateCard(number) {\r\n    if (!number || number.length < 13) {\r\n      return false;\r\n    }\r\n    return this.luhnAlgorithm(number);\r\n  }\r\n\r\n  luhnAlgorithm(number) {\r\n    const digits = number.replace(/\\D/g, '');\r\n    let sum = 0;\r\n    let isEven = false;\r\n\r\n    for (let i = digits.length - 1; i >= 0; i--) {\r\n      let digit = parseInt(digits[i], 10);\r\n\r\n      if (isEven) {\r\n        digit *= 2;\r\n        if (digit > 9) {\r\n          digit -= 9;\r\n        }\r\n      }\r\n\r\n      sum += digit;\r\n      isEven = !isEven;\r\n    }\r\n\r\n    return sum % 10 === 0;\r\n  }\r\n}","import { CSS_CLASSES, CARD_IMAGES, MESSAGES, INPUT_RESTRICTIONS } from '../utils/constants.js';\r\nimport CardTypeDetector from '../services/cardTypeDetector.js';\r\nimport Validator from '../services/cardValidation.js';\r\n\r\nexport default class CardValidator {\r\n  constructor(container) {\r\n    if (!container) {\r\n      throw new Error('Container element is required');\r\n    }\r\n    this.container = container;\r\n    this.input = null;\r\n    this.cardimage = {};\r\n    this.validator = new Validator();\r\n    this.typeDetector = new CardTypeDetector();\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.renderWidget();\r\n    this.setupListeners();\r\n  }\r\n\r\n  renderWidget() {\r\n    this.container.innerHTML = `\r\n      <div class=\"${CSS_CLASSES.CARD_VALIDATOR}\">\r\n        <div class=\"${CSS_CLASSES.CARD_IMAGES}\">\r\n          ${Object.entries(CARD_IMAGES).map(([type, src]) => `\r\n            <img src=\"${src}\" \r\n                 data-type=\"${type}\" \r\n                 class=\"${CSS_CLASSES.CARD_IMAGE}\"\r\n                 alt=\"${type}\"\r\n            >\r\n          `).join('')}\r\n        </div>\r\n        <input type=\"text\" \r\n               class=\"${CSS_CLASSES.CARD_INPUT}\"\r\n               maxlength=\"${INPUT_RESTRICTIONS.MAX_LENGTH}\"\r\n               placeholder=\"Enter card number\">\r\n        <button class=\"${CSS_CLASSES.VALIDATE_BUTTON}\">Validate</button>\r\n      </div>\r\n    `;\r\n\r\n    // this.container.innerHTML = markup;\r\n    this.input = this.container.querySelector(`.${CSS_CLASSES.CARD_INPUT}`);\r\n    this.cardImages  = Array.from(this.container.querySelectorAll(`.${CSS_CLASSES.CARD_IMAGE}`));\r\n  }\r\n\r\n  setupListeners() {\r\n    this.input.addEventListener('input', (e) => this.handleInput(e));\r\n    this.container.querySelector(`.${CSS_CLASSES.VALIDATE_BUTTON}`)\r\n      .addEventListener('click', () => this.validateCard());\r\n  }\r\n\r\n  handleInput(e) {\r\n    let value = e.target.value.replace(/\\D/g, '');\r\n\r\n    // Форматирование ввода по чанкам\r\n    const chunks = [];\r\n    for (let i = 0; i < value.length; i += INPUT_RESTRICTIONS.CHUNK_SIZE) {\r\n      chunks.push(value.slice(i, i + INPUT_RESTRICTIONS.CHUNK_SIZE));\r\n    }\r\n    this.input.value = chunks.join(' ');\r\n\r\n    const cardType = this.typeDetector.detectCardType(value);\r\n    this.highlightCardType(cardType);\r\n  }\r\n\r\n  \r\n  highlightCardType(type) {\r\n    this.cardImages.forEach(img => {\r\n      const isActive = img.dataset.type === type;\r\n      img.classList.toggle(CSS_CLASSES.ACTIVE, isActive);\r\n    });\r\n  }\r\n  \r\n  validateCard() {\r\n    const number = this.input.value.replace(/\\D/g, '');\r\n\r\n    if (!number) {\r\n      this.showValidationResult(false);\r\n      return;\r\n    }\r\n\r\n    if (number.length < 13) {\r\n      this.showValidationResult(false);\r\n      return;\r\n    }\r\n\r\n    const isValid = this.validator.validateCard(number);\r\n    this.showValidationResult(isValid);\r\n  }\r\n\r\n  showValidationResult(isValid) {\r\n    const message = isValid ? MESSAGES.VALID_CARD : MESSAGES.INVALID_CARD;\r\n    this.input.classList.toggle(CSS_CLASSES.VALID, isValid);\r\n    this.input.classList.toggle(CSS_CLASSES.INVALID, !isValid);\r\n    alert(message);\r\n  }\r\n}","import './css/style.css';\r\nimport CardValidator from './js/components/CardValidator.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const container = document.getElementById('root');\r\n  new CardValidator(container);\r\n});"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","CARD_PATTERNS","VISA","pattern","lengths","name","MASTERCARD","MIR","CSS_CLASSES","CARD_IMAGES","visa","visaImg","mastercard","mastercardImg","mir","mirImg","MESSAGES","INPUT_RESTRICTIONS","CardTypeDetector","detectCardType","number","cleanNumber","type","config","Object","entries","includes","CardValidation","validateCard","luhnAlgorithm","digits","sum","isEven","digit","parseInt","CardValidator","constructor","container","input","cardimage","validator","Validator","typeDetector","init","renderWidget","setupListeners","innerHTML","map","join","querySelector","cardImages","Array","from","querySelectorAll","addEventListener","handleInput","value","target","chunks","push","slice","cardType","highlightCardType","forEach","img","isActive","dataset","classList","toggle","showValidationResult","isValid","message","alert","getElementById"],"sourceRoot":""}