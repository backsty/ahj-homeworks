{"version":3,"file":"main.ab5eb001938e5bb2cd12.js","mappings":"mBAAe,MAAMA,EACnBC,WAAAA,GACEC,KAAKC,UAAY,GACjBD,KAAKE,MACP,CAEAA,IAAAA,GACEC,SAASC,iBAAiB,SAAUC,IAClC,MAAMC,EAAUD,EAAEE,OAAOC,QAAQ,kBAEjC,IAAKF,EAEH,YADAN,KAAKS,oBAIPJ,EAAEK,iBACF,MAAMC,EAAQL,EAAQM,QAAQD,MACxBE,EAAUP,EAAQM,QAAQC,QAChCb,KAAKc,cAAcH,EAAOE,EAASP,EAAQ,GAE/C,CAEAQ,aAAAA,CAAcH,EAAOE,EAASE,GAC5B,MAAMC,EAAkBhB,KAAKC,UAAUgB,MAAKC,GAAKA,EAAEZ,UAAYS,IAE3DC,EACFhB,KAAKmB,cAAcH,EAAgBI,IAIrCpB,KAAKqB,YAAYV,EAAOE,EAASE,EACnC,CAEAM,WAAAA,CAAYV,EAAOE,EAASE,GAC1B,MAAMO,EAAiBnB,SAASoB,cAAc,OAC9CD,EAAeE,UAAUC,IAAI,WAE7BH,EAAeI,UAAY,sCACIf,2CACDE,gBAG9B,MAAMO,EAAKO,YAAYC,MACjBC,EAAiBA,KACrB,MAAM,KAAEC,EAAI,IAAEC,EAAG,MAAEC,GAAUjB,EAAQkB,wBACrCX,EAAeY,MAAMJ,KAAO,GAAGA,EAAOE,EAAM,MAC5CV,EAAeY,MAAMH,IAAM,GAAGI,OAAOC,QAAUL,KAAO,EAgBxD,OAbA/B,KAAKC,UAAUoC,KAAK,CAClBjB,KACAL,QAASO,EACThB,QAASS,EACTc,mBAGF1B,SAASmC,KAAKC,YAAYjB,GAC1BO,IAEAM,OAAO/B,iBAAiB,SAAUyB,GAClCM,OAAO/B,iBAAiB,SAAUyB,GAE3BT,CACT,CAEAD,aAAAA,CAAcC,GACZ,MAAMoB,EAAUxC,KAAKC,UAAUgB,MAAKC,GAAKA,EAAEE,KAAOA,IAE7CoB,GAEDA,IACFA,EAAQzB,QAAQ0B,SAChBzC,KAAKC,UAAYD,KAAKC,UAAUyC,QAAOxB,GAAKA,EAAEE,KAAOA,IAEzD,CAEAX,iBAAAA,GACET,KAAKC,UAAU0C,SAAQH,GAAWA,EAAQzB,QAAQ0B,WAClDzC,KAAKC,UAAY,EACnB,EC7EF,MAAM2C,EAAmBzC,SAAS0C,cAAc,cAC1CC,EACK,CACPnC,MAAO,gBACPE,QAAS,+DAQb,IAAIkC,EAAiB,KACjBC,EAAiB,GA4BrB,SAASC,EAAYC,GACnB,MAAM3C,EAAS2C,EAAM3C,OAAOC,QAAQ,kBAEpC,IAAKD,EAEH,OAXFyC,EAAeL,SAAQH,IACrBO,EAAe5B,cAAcqB,EAAQpB,GAAG,SAE1C4B,EAAiB,IAWjBE,EAAMxC,iBAEmBsC,EAAeG,MAAKjC,GAAKA,EAAEH,UAAYR,IAzBlE,SAAuBQ,GACrB,MAAMyB,EAAUQ,EAAe/B,MAAKC,GAAKA,EAAEH,UAAYA,IACnDyB,IACFO,EAAe5B,cAAcqB,EAAQpB,IACrC4B,EAAiBA,EAAeN,QAAOxB,GAAKA,EAAEE,KAAOoB,EAAQpB,KAEjE,CAqBID,CAAcZ,GAtClB,SAAqBQ,GACnB,MAAMJ,EAAQI,EAAQH,QAAQD,OAASmC,EAAwBnC,MACzDE,EAAUE,EAAQH,QAAQC,SAAWiC,EAAwBjC,QAE7DO,EAAK2B,EAAe1B,YAAYV,EAAOE,EAASE,GACtDiC,EAAeX,KAAK,CAClBtB,UACAK,MAEJ,CA+BIC,CAAYd,EAEhB,CAEAJ,SAASC,iBAAiB,oBAAoB,KAC5C,IACE2C,EAAiB,IAAIjD,EACrB8C,EAAiBxC,iBAAiB,QAAS6C,GAC3CG,QAAQC,IAAI,yCACd,CAAE,MAAOC,GACPF,QAAQE,MAAM,sCAAuCA,EACvD,I","sources":["webpack://forms/./src/js/popover.js","webpack://forms/./src/js/app.js"],"sourcesContent":["export default class PopoverWidget {\n  constructor() {\n    this._popovers = [];\n    this.init();\n  }\n\n  init() {\n    document.addEventListener('click', (e) => {\n      const trigger = e.target.closest('[data-popover]');\n      \n      if (!trigger) {\n        this.removeAllPopovers();\n        return;\n      }\n\n      e.preventDefault();\n      const title = trigger.dataset.title;\n      const content = trigger.dataset.content;\n      this.togglePopover(title, content, trigger);\n    });\n  }\n\n  togglePopover(title, content, element) {\n    const existingPopover = this._popovers.find(p => p.trigger === element);\n    \n    if (existingPopover) {\n      this.removePopover(existingPopover.id);\n      return;\n    }\n\n    this.showPopover(title, content, element);\n  }\n\n  showPopover(title, content, element) {\n    const popoverElement = document.createElement('div');\n    popoverElement.classList.add('popover');\n    \n    popoverElement.innerHTML = `\n      <h3 class=\"popover-header\">${title}</h3>\n      <div class=\"popover-body\">${content}</div>\n    `;\n\n    const id = performance.now();\n    const updatePosition = () => {\n      const { left, top, width } = element.getBoundingClientRect();\n      popoverElement.style.left = `${left + width/2}px`;\n      popoverElement.style.top = `${window.scrollY + top}px`;\n    };\n\n    this._popovers.push({\n      id,\n      element: popoverElement,\n      trigger: element,\n      updatePosition,\n    });\n\n    document.body.appendChild(popoverElement);\n    updatePosition();\n\n    window.addEventListener('resize', updatePosition);\n    window.addEventListener('scroll', updatePosition);\n\n    return id;\n  }\n\n  removePopover(id) {\n    const popover = this._popovers.find(p => p.id === id);\n\n    if (!popover) return;\n    \n    if (popover) {\n      popover.element.remove();\n      this._popovers = this._popovers.filter(p => p.id !== id);\n    }\n  }\n\n  removeAllPopovers() {\n    this._popovers.forEach(popover => popover.element.remove());\n    this._popovers = [];\n  }\n};","import PopoverWidget from './popover.js';\n\nconst popoverContainer = document.querySelector('.container');\nconst popoverMessages = {\n  default: {\n    title: 'Popover Title',\n    content: 'And here`s some amazing content. It`s very engaging. Right?',\n  },\n  error: {\n    title: 'Ошибка',\n    content: 'Что-то пошло не так',\n  },\n};\n\nlet popoverFactory = null;\nlet activePopovers = [];\n\nfunction showPopover(element) {\n  const title = element.dataset.title || popoverMessages.default.title;\n  const content = element.dataset.content || popoverMessages.default.content;\n\n  const id = popoverFactory.showPopover(title, content, element);\n  activePopovers.push({\n    element,\n    id,\n  });\n}\n\nfunction removePopover(element) {\n  const popover = activePopovers.find(p => p.element === element);\n  if (popover) {\n    popoverFactory.removePopover(popover.id);\n    activePopovers = activePopovers.filter(p => p.id !== popover.id);\n  }\n}\n\nfunction removeAllPopovers() {\n  activePopovers.forEach(popover => {\n    popoverFactory.removePopover(popover.id);\n  });\n  activePopovers = [];\n}\n\nfunction handleClick(event) {\n  const target = event.target.closest('[data-popover]');\n  \n  if (!target) {\n    removeAllPopovers();\n    return;\n  }\n\n  event.preventDefault();\n\n  const hasActivePopover = activePopovers.some(p => p.element === target);\n  if (hasActivePopover) {\n    removePopover(target);\n  } else {\n    showPopover(target);\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  try {\n    popoverFactory = new PopoverWidget();\n    popoverContainer.addEventListener('click', handleClick);\n    console.log('PopoverWidget initialized successfully');\n  } catch (error) {\n    console.error('Failed to initialize PopoverWidget:', error);\n  }\n});"],"names":["PopoverWidget","constructor","this","_popovers","init","document","addEventListener","e","trigger","target","closest","removeAllPopovers","preventDefault","title","dataset","content","togglePopover","element","existingPopover","find","p","removePopover","id","showPopover","popoverElement","createElement","classList","add","innerHTML","performance","now","updatePosition","left","top","width","getBoundingClientRect","style","window","scrollY","push","body","appendChild","popover","remove","filter","forEach","popoverContainer","querySelector","popoverMessages","popoverFactory","activePopovers","handleClick","event","some","console","log","error"],"sourceRoot":""}